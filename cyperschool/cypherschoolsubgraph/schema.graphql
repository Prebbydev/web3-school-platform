type AssignmentSubmitted @entity(immutable: true) {
  id: Bytes!
  student: Bytes! # address
  courseId: BigInt! # uint256
  assignmentURL: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CourseCompleted @entity(immutable: true) {
  id: Bytes!
  student: Bytes! # address
  courseId: BigInt! # uint256
  courseReward: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CourseEnrolled @entity(immutable: true) {
  id: Bytes!
  student: Bytes! # address
  courseId: BigInt! # uint256
  rewardEarned: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CreateCourse @entity(immutable: true) {
  id: Bytes!
  courseId: BigInt! # uint256
  title: String! # string
  courseURL: String! # string
  submitLink: String! # string
  credit: BigInt! # uint256
  reward: BigInt! # uint256
  param6: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
